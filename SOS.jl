#Use this Julia module to generate barrier certificates.
using MathOptInterface
const MOI = MathOptInterface
using JuMP
using SumOfSquares
using PolyJuMP
using Base.Test
using MultivariatePolynomials
using SemialgebraicSets
using Mosek

import DynamicPolynomials.@polyvar

@polyvar x[1:15]
f = [-0.5581966244634702*x[1]+-0.4654310389911049*x[2]+-0.6998855101891297*x[3]+-0.7079707765273742*x[4]+0.6098797735021717*x[5]+1.0087919331004094*x[6]+1.6542225470386298*x[7]+1.0701148119279058*x[8]+-1.57013867510332*x[9]+0.5569880124798643*x[10]+0.8581513469324091*x[11]+-0.20849521202246724*x[12]+-1.0974276255701743*x[13]+1.5088550509355538*x[14]+-0.22661893811504807*x[15],0.0*x[1]+0.0*x[2]+1.0*x[3]+0.0*x[4]+0.0*x[5]+0.0*x[6]+0.0*x[7]+0.0*x[8]+0.0*x[9]+0.0*x[10]+0.0*x[11]+0.0*x[12]+0.0*x[13]+0.0*x[14]+0.0*x[15],-0.34896068769547883*x[1]+-1.1185280852907007*x[2]+-1.5795560057761053*x[3]+-0.21809114142980623*x[4]+1.5387143654737752*x[5]+0.9573170999003305*x[6]+2.1367490673125378*x[7]+1.9374511402904475*x[8]+-1.7824314615680643*x[9]+0.8609618366838522*x[10]+-0.4775628899318891*x[11]+-0.3821815463018913*x[12]+-0.9310084488570011*x[13]+1.8566441815150119*x[14]+-1.8940194174751803*x[15],0.0*x[1]+0.0*x[2]+0.0*x[3]+0.0*x[4]+1.0*x[5]+0.0*x[6]+0.0*x[7]+0.0*x[8]+0.0*x[9]+0.0*x[10]+0.0*x[11]+0.0*x[12]+0.0*x[13]+0.0*x[14]+0.0*x[15],1.004748074025072*x[1]+0.0298037677174271*x[2]+1.188057635683436*x[3]+0.2970808652197797*x[4]+-1.9625374751226399*x[5]+0.8241148935767881*x[6]+-0.6138849186263245*x[7]+-1.2367525728226085*x[8]+0.23856153307327735*x[9]+-0.4824573848999604*x[10]+2.2396597597662433*x[11]+-1.38893773679144*x[12]+0.139181586849159*x[13]+-0.8444112802985813*x[14]+3.2530939558923793*x[15],0.0*x[1]+0.0*x[2]+0.0*x[3]+0.0*x[4]+0.0*x[5]+0.0*x[6]+1.0*x[7]+0.0*x[8]+0.0*x[9]+0.0*x[10]+0.0*x[11]+0.0*x[12]+0.0*x[13]+0.0*x[14]+0.0*x[15],-2.2436630043420287*x[1]+0.4180922854930063*x[2]+-0.7942874884586839*x[3]+-1.6417248082383402*x[4]+1.2549475071080947*x[5]+-1.8976533591600706*x[6]+0.05445509772639584*x[7]+0.8295803500465516*x[8]+1.9019877506966079*x[9]+0.4824527454342976*x[10]+-1.7702084594160015*x[11]+2.70905546230351*x[12]+-0.8895493585234708*x[13]+-0.010188595629521846*x[14]+-1.0835905190964883*x[15],0.0*x[1]+0.0*x[2]+0.0*x[3]+0.0*x[4]+0.0*x[5]+0.0*x[6]+0.0*x[7]+0.0*x[8]+1.0*x[9]+0.0*x[10]+0.0*x[11]+0.0*x[12]+0.0*x[13]+0.0*x[14]+0.0*x[15],1.7602898064240604*x[1]+0.6773231474010044*x[2]+0.17653229898366352*x[3]+0.8343040150925262*x[4]+0.0903308022095009*x[5]+0.0518111168844666*x[6]+-0.2487455123921745*x[7]+-2.254164284064777*x[8]+-0.967993679393196*x[9]+-0.12711296668865968*x[10]+1.092404862982082*x[11]+-1.1436872948511536*x[12]+2.2614586256032236*x[13]+-0.7634995076410669*x[14]+-0.657976414993638*x[15],0.0*x[1]+0.0*x[2]+0.0*x[3]+0.0*x[4]+0.0*x[5]+0.0*x[6]+0.0*x[7]+0.0*x[8]+0.0*x[9]+0.0*x[10]+1.0*x[11]+0.0*x[12]+0.0*x[13]+0.0*x[14]+0.0*x[15],-0.5141410135594853*x[1]+0.1895387320672952*x[2]+-0.17280557540991592*x[3]+-0.44186019579296293*x[4]+-0.3936405457048824*x[5]+1.2030550142398522*x[6]+0.4972318093343544*x[7]+2.0462089671108434*x[8]+-1.4070340455865888*x[9]+-1.8133807277646015*x[10]+-1.1914652665327694*x[11]+1.1385290133163068*x[12]+-0.5512692580261758*x[13]+2.2642073839030346*x[14]+0.27345719827887954*x[15],0.0*x[1]+0.0*x[2]+0.0*x[3]+0.0*x[4]+0.0*x[5]+0.0*x[6]+0.0*x[7]+0.0*x[8]+0.0*x[9]+0.0*x[10]+0.0*x[11]+0.0*x[12]+1.0*x[13]+0.0*x[14]+0.0*x[15],-0.5674502423044927*x[1]+-0.49770027406450756*x[2]+0.34727787024896*x[3]+0.5426663285417485*x[4]+0.5506954414070897*x[5]+-1.581607990861836*x[6]+-0.7372231183961424*x[7]+1.000778586598197*x[8]+-0.2533527772885558*x[9]+1.2736848125026226*x[10]+1.0428153802553846*x[11]+-1.3853078173030784*x[12]+-2.195270727101433*x[13]+-0.5308438892720299*x[14]+0.8504776519714912*x[15],0.0*x[1]+0.0*x[2]+0.0*x[3]+0.0*x[4]+0.0*x[5]+0.0*x[6]+0.0*x[7]+0.0*x[8]+0.0*x[9]+0.0*x[10]+0.0*x[11]+0.0*x[12]+0.0*x[13]+0.0*x[14]+1.0*x[15],-0.2675790021703063*x[1]+-1.024860326966664*x[2]+0.5515976001795911*x[3]+-0.7654585443038193*x[4]+-0.20911608998238485*x[5]+2.122557893022907*x[6]+-0.4837498358363014*x[7]+-1.8776626859942507*x[8]+2.2508645940672816*x[9]+0.8891935967408242*x[10]+-1.1168921567972578*x[11]+-0.255934956777798*x[12]+1.7288661137214567*x[13]+-1.9716421518623584*x[14]+-1.8170891216285303*x[15]]
init1 = (x[1] - -0.10000000000000142)*(0.10000000000000142-x[1])
init2 = (x[2] - -0.09999999999999998)*(0.10000000000000009-x[2])
init3 = (x[3] - -0.1)*(0.1-x[3])
init4 = (x[4] - -0.09999999999999998)*(0.10000000000000009-x[4])
init5 = (x[5] - -0.1)*(0.1-x[5])
init6 = (x[6] - -0.09999999999999998)*(0.10000000000000009-x[6])
init7 = (x[7] - -0.1)*(0.1-x[7])
init8 = (x[8] - -0.09999999999999998)*(0.10000000000000009-x[8])
init9 = (x[9] - -0.1)*(0.1-x[9])
init10 = (x[10] - -0.09999999999999998)*(0.10000000000000009-x[10])
init11 = (x[11] - -0.1)*(0.1-x[11])
init12 = (x[12] - -0.09999999999999998)*(0.10000000000000009-x[12])
init13 = (x[13] - -0.1)*(0.1-x[13])
init14 = (x[14] - -0.09999999999999998)*(0.10000000000000009-x[14])
init15 = (x[15] - -0.1)*(0.1-x[15])
init16 = (x[1] - (-0.009490316757162456))*((0.17152904972851546)-x[1])
init17 = (x[2] - (-0.08067848790941112))*((0.039773837363529685)-x[2])
init18 = (x[3] - (-0.12451441195019078))*((0.025161862683269746)-x[3])
init19 = (x[4] - (-0.006547218895111506))*((0.18035834331466544)-x[4])
init20 = (x[5] - (-0.1752557667007712))*((0.008248077766409609)-x[5])
init21 = (x[6] - (-0.0723492116182012))*((0.042550262793932994)-x[6])
init22 = (x[7] - (-0.02512739444921895))*((0.12461781665234316)-x[7])
init23 = (x[8] - (-0.12487578650521473))*((0.025041404498261824)-x[8])
init24 = (x[9] - (-0.060224832198347095))*((0.04659172260055097)-x[9])
init25 = (x[10] - (-0.14065305891106167))*((0.01978231369631283)-x[10])
init26 = (x[11] - (-0.12593793346190388))*((0.024687355512698704)-x[11])
init27 = (x[12] - (-0.09396484711955093))*((0.03534505096014974)-x[12])
init28 = (x[13] - (-0.01896502638787849))*((0.14310492083636456)-x[13])
init29 = (x[14] - (-0.019003369315543847))*((0.14298989205336843)-x[14])
init30 = (x[15] - (-0.01619368628243037))*((0.1514189411527089)-x[15])
unsafe1 = (x[1] - 0.0)^2 - 4.0
unsafe2 = (x[2] - -0.2)^2 - 0.48999999999999994
unsafe3 = (x[3] - 0.0)^2 - 1.0
unsafe4 = (x[4] - 0.0)^2 - 0.25
unsafe5 = (x[5] - 0.0)^2 - 1.0
unsafe6 = (x[6] - 0.0)^2 - 0.25
unsafe7 = (x[7] - 0.0)^2 - 1.0
unsafe8 = (x[8] - 0.0)^2 - 0.25
unsafe9 = (x[9] - 0.0)^2 - 1.0
unsafe10 = (x[10] - 0.0)^2 - 0.25
unsafe11 = (x[11] - 0.0)^2 - 1.0
unsafe12 = (x[12] - 0.0)^2 - 0.25
unsafe13 = (x[13] - 0.0)^2 - 0.016900000000000002
unsafe14 = (x[14] - 0.0)^2 - 0.25
unsafe15 = (x[15] - 0.0)^2 - 1.0

m = SOSModel(solver = MosekSolver())

Z = monomials(x, 0:1)
@variable m Zinit1 SOSPoly(Z)
@variable m Zinit2 SOSPoly(Z)
@variable m Zinit3 SOSPoly(Z)
@variable m Zinit4 SOSPoly(Z)
@variable m Zinit5 SOSPoly(Z)
@variable m Zinit6 SOSPoly(Z)
@variable m Zinit7 SOSPoly(Z)
@variable m Zinit8 SOSPoly(Z)
@variable m Zinit9 SOSPoly(Z)
@variable m Zinit10 SOSPoly(Z)
@variable m Zinit11 SOSPoly(Z)
@variable m Zinit12 SOSPoly(Z)
@variable m Zinit13 SOSPoly(Z)
@variable m Zinit14 SOSPoly(Z)
@variable m Zinit15 SOSPoly(Z)
@variable m Zinit16 SOSPoly(Z)
@variable m Zinit17 SOSPoly(Z)
@variable m Zinit18 SOSPoly(Z)
@variable m Zinit19 SOSPoly(Z)
@variable m Zinit20 SOSPoly(Z)
@variable m Zinit21 SOSPoly(Z)
@variable m Zinit22 SOSPoly(Z)
@variable m Zinit23 SOSPoly(Z)
@variable m Zinit24 SOSPoly(Z)
@variable m Zinit25 SOSPoly(Z)
@variable m Zinit26 SOSPoly(Z)
@variable m Zinit27 SOSPoly(Z)
@variable m Zinit28 SOSPoly(Z)
@variable m Zinit29 SOSPoly(Z)
@variable m Zinit30 SOSPoly(Z)
Z = monomials(x, 0:1)
@variable m Zunsafe1 SOSPoly(Z)
@variable m Zunsafe2 SOSPoly(Z)
@variable m Zunsafe3 SOSPoly(Z)
@variable m Zunsafe4 SOSPoly(Z)
@variable m Zunsafe5 SOSPoly(Z)
@variable m Zunsafe6 SOSPoly(Z)
@variable m Zunsafe7 SOSPoly(Z)
@variable m Zunsafe8 SOSPoly(Z)
@variable m Zunsafe9 SOSPoly(Z)
@variable m Zunsafe10 SOSPoly(Z)
@variable m Zunsafe11 SOSPoly(Z)
@variable m Zunsafe12 SOSPoly(Z)
@variable m Zunsafe13 SOSPoly(Z)
@variable m Zunsafe14 SOSPoly(Z)
@variable m Zunsafe15 SOSPoly(Z)
Z = monomials(x, 0:4)
@variable m B Poly(Z)

x1 = x[1] + 0.01*f[1]
x2 = x[2] + 0.01*f[2]
x3 = x[3] + 0.01*f[3]
x4 = x[4] + 0.01*f[4]
x5 = x[5] + 0.01*f[5]
x6 = x[6] + 0.01*f[6]
x7 = x[7] + 0.01*f[7]
x8 = x[8] + 0.01*f[8]
x9 = x[9] + 0.01*f[9]
x10 = x[10] + 0.01*f[10]
x11 = x[11] + 0.01*f[11]
x12 = x[12] + 0.01*f[12]
x13 = x[13] + 0.01*f[13]
x14 = x[14] + 0.01*f[14]
x15 = x[15] + 0.01*f[15]

B1 = subs(B, x[1]=>x1, x[2]=>x2, x[3]=>x3, x[4]=>x4, x[5]=>x5, x[6]=>x6, x[7]=>x7, x[8]=>x8, x[9]=>x9, x[10]=>x10, x[11]=>x11, x[12]=>x12, x[13]=>x13, x[14]=>x14, x[15]=>x15)

f1 = -B - Zinit1*init1 - Zinit2*init2 - Zinit3*init3 - Zinit4*init4 - Zinit5*init5 - Zinit6*init6 - Zinit7*init7 - Zinit8*init8 - Zinit9*init9 - Zinit10*init10 - Zinit11*init11 - Zinit12*init12 - Zinit13*init13 - Zinit14*init14 - Zinit15*init15 - Zinit16*init16 - Zinit17*init17 - Zinit18*init18 - Zinit19*init19 - Zinit20*init20 - Zinit21*init21 - Zinit22*init22 - Zinit23*init23 - Zinit24*init24 - Zinit25*init25 - Zinit26*init26 - Zinit27*init27 - Zinit28*init28 - Zinit29*init29 - Zinit30*init30
f2 = B - B1
f3 = B - Zunsafe1*unsafe1
f4 = B - Zunsafe2*unsafe2
f5 = B - Zunsafe3*unsafe3
f6 = B - Zunsafe4*unsafe4
f7 = B - Zunsafe5*unsafe5
f8 = B - Zunsafe6*unsafe6
f9 = B - Zunsafe7*unsafe7
f10 = B - Zunsafe8*unsafe8
f11 = B - Zunsafe9*unsafe9
f12 = B - Zunsafe10*unsafe10
f13 = B - Zunsafe11*unsafe11
f14 = B - Zunsafe12*unsafe12
f15 = B - Zunsafe13*unsafe13
f16 = B - Zunsafe14*unsafe14
f17 = B - Zunsafe15*unsafe15


@constraint m f1 >= 0
@constraint m f2 >= 0
@constraint m f3 >= 1
@constraint m f4 >= 1
@constraint m f5 >= 1
@constraint m f6 >= 1
@constraint m f7 >= 1
@constraint m f8 >= 1
@constraint m f9 >= 1
@constraint m f10 >= 1
@constraint m f11 >= 1
@constraint m f12 >= 1
@constraint m f13 >= 1
@constraint m f14 >= 1
@constraint m f15 >= 1
@constraint m f16 >= 1
@constraint m f17 >= 1


status = solve(m)
print(STDERR,status)
print(STDERR,'#')
print(STDERR,getvalue(B))